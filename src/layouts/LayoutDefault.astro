---
import { themeConfig } from '~/.config'
import SiteFooter from '~/components/SiteFooter.astro'
import SiteNavigation from '~/components/SiteNavigation.astro'
import SiteTitle from '~/components/SiteTitle.astro'
import SiteSeo from '~/components/SiteSeo.astro'
import LaTeX from '~/components/LaTeX.astro'
import Analytics from '~/components/Analytics.astro'
import ThemeScript from '~/components/ThemeScript.astro'
import '~/styles/global.css'

const lang = themeConfig.appearance.locale ?? 'en-us'
const dark = themeConfig.appearance.theme === 'dark'
---

<html lang={lang} class:list={['animation-prepared', { dark }]}>
  <head>
    <slot name="seo"> <SiteSeo /> </slot>
    <LaTeX />
    <Analytics />
    <ThemeScript />
  </head>

  <body
    class="h-100vh max-w-1200px min-w-390px mx-a"
    p="7.5 lg:(y-0 x-20)"
    lg="grid gap-x-6 cols-[3fr_1fr] rows-[1fr_9rem]"
  >
    <header
      class="transition-swup-header flex flex-col gap-2.5"
      m="7.5 lg:(x-0 t-20 b-4)"
      lg="row-1-2 col-2-3 justify-between items-start"
    >
      <SiteTitle />
      <SiteNavigation />
    </header>

    <main class="transition-swup-main overflow-y-scroll scrollbar-hide outline-none" lg="row-1-3 col-1-2 py-20 ">
      <slot />
    </main>

    <footer class="transition-swup-footer py-7.5" lg="row-2-3 col-2-3">
      <SiteFooter />
    </footer>

    <script>
      document.addEventListener('animationend', removeAnimation, false)
      function removeAnimation() {
        document.documentElement.classList.remove('animation-prepared')
        document.removeEventListener('animationend', removeAnimation, false)
      }
    </script>
    <style>
      /* 页面首次加载动画 */
      html.animation-prepared .transition-swup-header,
      html.animation-prepared .transition-swup-footer {
        animation: fade-in-down 1s linear 1;
        --at-apply: 'lg-animate-name-fade-in-left';
      }

      html.animation-prepared .transition-swup-main {
        animation: fade-in-down 1s linear 1;
      }

      @keyframes fade-in-down {
        0% {
          transform: translateY(-1rem);
          opacity: 0;
        }
        100% {
          transform: translateY(0);
          opacity: 1;
        }
      }

      @keyframes fade-in-left {
        0% {
          opacity: 0;
          transform: translateX(1rem);
        }

        100% {
          opacity: 1;
          transform: translateX(0);
        }
      }

      /* 页面过渡动画 */
      html.is-animating .transition-swup-main {
        opacity: 0;
        transform: translateY(-1rem);
      }
      html.is-leaving .transition-swup-main {
        opacity: 0;
        transform: translateY(1rem);
      }
      .transition-swup-main {
        transition-duration: 0.5s;
        transition-timing-function: linear;
        transform: translateY(0);
        opacity: 1;
      }
    </style>
    <script>
      // 镜像测速跳转脚本，仅在主站首页执行
      const mirrors = [
        "https://njuv.xx.kg/ping.png",
        "https://njuv.netlify.app/ping.png",
        "https://njuv.vercel.app/ping.png"
      ];
      const mirrorDomains = [
        "https://njuv.xx.kg",
        "https://njuv.netlify.app",
        "https://njuv.vercel.app"
      ];
      // 只在主站首页执行跳转，防止内页和镜像站点重复跳转
      if (
        window.location.hostname === "njuv.xx.kg" &&
        (window.location.pathname === "/")
      ) {
        Promise.all(mirrors.map((url, i) => {
          const start = performance.now();
          return fetch(url, {mode: "no-cors", cache: "no-store"})
            .then(() => performance.now() - start)
            .catch(() => Infinity);
        })).then(times => {
          const minIndex = times.indexOf(Math.min(...times));
          if (minIndex !== -1 && times[minIndex] !== Infinity) {
            window.location.href = mirrorDomains[minIndex];
          }
        });
      }
    </script>
  </body>
</html>
